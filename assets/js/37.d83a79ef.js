(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{242:function(e,a,t){"use strict";t.r(a);var n=t(0),v=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"framework"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#framework"}},[e._v("#")]),e._v(" Framework")]),e._v(" "),t("h3",{attrs:{id:"谈谈你对webpack的看法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#谈谈你对webpack的看法"}},[e._v("#")]),e._v(" 谈谈你对webpack的看法")]),e._v(" "),t("p",[t("code",[e._v("WebPack")]),e._v(" 是一个模块打包工具，你可以使用"),t("code",[e._v("WebPack")]),e._v("管理你的模块依赖，并编绎输出模块们所需的静态文件。它能够很好地管理、打包Web开发中所用到的"),t("code",[e._v("HTML、Javascript、CSS")]),e._v("以及各种静态文件（图片、字体等），让开发过程更加高效。对于不同类型的资源，"),t("code",[e._v("webpack")]),e._v("有对应的模块加载器。"),t("code",[e._v("webpack")]),e._v("模块打包器会分析模块间的依赖关系，最后 生成了优化且合并后的静态资源。")]),e._v(" "),t("p",[t("code",[e._v("webpack")]),e._v("的两大特色：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("1.code splitting（可以自动完成）\n\n2.loader 可以处理各种类型的静态文件，并且支持串联操作\n")])])]),t("p",[t("code",[e._v("webpack")]),e._v(" 是以"),t("code",[e._v("commonJS")]),e._v("的形式来书写脚本滴，但对 "),t("code",[e._v("AMD/CMD")]),e._v(" 的支持也很全面，方便旧项目进行代码迁移。")]),e._v(" "),t("p",[t("code",[e._v("webpack")]),e._v("具有"),t("code",[e._v("requireJs")]),e._v("和"),t("code",[e._v("browserify")]),e._v("的功能，但仍有很多自己的新特性：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("1. 对 CommonJS 、 AMD 、ES6的语法做了兼容\n\n2. 对js、css、图片等资源文件都支持打包\n\n3. 串联式模块加载器以及插件机制，让其具有更好的灵活性和扩展性，例如提供对CoffeeScript、ES6的支持\n\n4. 有独立的配置文件webpack.config.js\n\n5. 可以将代码切割成不同的chunk，实现按需加载，降低了初始化时间\n\n6. 支持 SourceUrls 和 SourceMaps，易于调试\n\n7. 具有强大的Plugin接口，大多是内部插件，使用起来比较灵活\n\n8.webpack 使用异步 IO 并具有多级缓存。这使得 webpack 很快且在增量编译上更加快\n")])])]),t("h3",{attrs:{id:"谈谈你对重构的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#谈谈你对重构的理解"}},[e._v("#")]),e._v(" 谈谈你对重构的理解")]),e._v(" "),t("p",[e._v("网站重构：在不改变外部行为的前提下，简化结构、添加可读性，而在网站前端保持一致的行为。也就是说是在不改变UI的情况下，对网站进行优化，在扩展的同时保持一致的UI。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("对于传统的网站来说重构通常是：\n\n表格(table)布局改为DIV+CSS\n\n使网站前端兼容于现代浏览器(针对于不合规范的CSS、如对IE6有效的)\n\n对于移动平台的优化\n\n针对于SEO进行优化\n\n深层次的网站重构应该考虑的方面\n\n减少代码间的耦合\n\n让代码保持弹性\n\n严格按规范编写代码\n\n设计可扩展的API\n\n代替旧有的框架、语言(如VB)\n\n增强用户体验\n\n通常来说对于速度的优化也包含在重构中\n\n压缩JS、CSS、image等前端资源(通常是由服务器来解决)\n\n程序的性能优化(如数据读写)\n\n采用CDN来加速资源加载\n\n对于JS DOM的优化\n\nHTTP服务器的文件缓存\n")])])]),t("h3",{attrs:{id:"说说你对mvc和mvvm的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#说说你对mvc和mvvm的理解"}},[e._v("#")]),e._v(" 说说你对MVC和MVVM的理解")]),e._v(" "),t("ul",[t("li",[e._v("MVC")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("View 传送指令到 Controller\n\nController 完成业务逻辑后，要求 Model 改变状态\n\nModel 将新的数据发送到 View，用户得到反馈\n")])])]),t("p",[e._v("所有通信都是单向的。")]),e._v(" "),t("ul",[t("li",[e._v("MVVM")])]),e._v(" "),t("p",[t("code",[e._v("Angular")]),e._v("它采用双向绑定（data-binding）："),t("code",[e._v("View")]),e._v("的变动，自动反映在 "),t("code",[e._v("ViewModel")]),e._v("，反之亦然。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("组成部分Model、View、ViewModel\n\nView：UI界面\n\nViewModel：它是View的抽象，负责View与Model之间信息转换，将View的Command传送到Model；\n\nModel：数据访问层\n")])])]),t("h3",{attrs:{id:"react的自定义事件和原生事件的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react的自定义事件和原生事件的区别"}},[e._v("#")]),e._v(" react的自定义事件和原生事件的区别")]),e._v(" "),t("p",[e._v("React 并不是将 click 事件绑在该 div 的真实 DOM 上，而是在 document 处监听所有支持的事件，当事件发生并冒泡至 document 处时，React 将事件内容封装并交由真正的处理函数运行。")]),e._v(" "),t("h3",{attrs:{id:"setstate是异步还是同步的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#setstate是异步还是同步的"}},[e._v("#")]),e._v(" setState是异步还是同步的")]),e._v(" "),t("p",[e._v("不要着急回答是异步的，再上问的基础上 setState 也可以是同步的。")]),e._v(" "),t("p",[e._v("setState 只在合成事件和钩子函数中是“异步”的，在原生事件和 setTimeout 中都是同步的。")]),e._v(" "),t("p",[e._v("详情请阅读 饿了么-虹晨大佬的文章 "),t("a",{attrs:{href:"https://juejin.im/post/5b45c57c51882519790c7441",target:"_blank",rel:"noopener noreferrer"}},[e._v("你真的理解setState吗？"),t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"webpack-是什么-webpack-常见的优化手段有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack-是什么-webpack-常见的优化手段有哪些"}},[e._v("#")]),e._v(" webpack 是什么?webpack 常见的优化手段有哪些;")]),e._v(" "),t("p",[e._v("webpack 是一个资源处理工具,它的出现节省了我们的人力和时间; 可以对资源打包,解析,区分开发模式等等...")]),e._v(" "),t("p",[e._v("常见的优化手段:")]),e._v(" "),t("ul",[t("li",[e._v("分离第三方库(依赖),比如引入dll")]),e._v(" "),t("li",[e._v("引入多进程编译,比如happypack")]),e._v(" "),t("li",[e._v("提取公共的依赖模块,比如commonChunkPlugin")]),e._v(" "),t("li",[e._v("资源混淆和压缩:比如UglifyJS")]),e._v(" "),t("li",[e._v("分离样式这些,减小bundle chunk的大小,比如ExtractTextPlugin")]),e._v(" "),t("li",[e._v("GZIP 压缩,在打包的时候对资源对齐压缩,只要部署的服务器能解析即可..减少请求的大小")]),e._v(" "),t("li",[e._v("还有按需加载这些,一般主流的框架都有对应的模块懒加载方式.")]),e._v(" "),t("li",[e._v("至于tree shaking目前webpack3/4已经默认集成")])])])}),[],!1,null,null,null);a.default=v.exports}}]);