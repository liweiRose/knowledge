(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{204:function(e,t,r){"use strict";r.r(t);var n=r(0),a=Object(n.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._m(1),r("p",[r("a",{attrs:{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js"),r("OutboundLink")],1),e._v(" 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。")]),e._m(2),r("ul",[r("li",[r("a",{attrs:{href:"https://nodejs.org/en/download/",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网下载"),r("OutboundLink")],1)]),r("li",[e._v("windows 和 macOS 安装均可直接使用下载链接安装")]),r("li",[r("a",{attrs:{href:"http://www.runoob.com/nodejs/nodejs-install-setup.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("具体安装步骤"),r("OutboundLink")],1)]),r("li",[e._v("保持 node 版本在 v8.3 以上")])]),e._m(3),e._m(4),r("p",[e._v("Yarn 是 Facebook, Google, Exponent 和 Tilde 开发的一款新的 JavaScript 包管理工具。Yarn 缓存了每个下载过的包，所以再次使用时无需重复下载。 同时利用并行下载以最大化资源利用率，因此安装速度更快。简单的来说就是具有 npm 功能但是比 npm 更快更好用。")]),e._m(5),e._m(6),e._m(7),e._m(8),e._m(9),r("blockquote",[r("p",[e._v("注：windows 安装请参考 "),r("a",{attrs:{href:"https://yarn.bootcss.com/docs/install/#windows-stable",target:"_blank",rel:"noopener noreferrer"}},[e._v("此处"),r("OutboundLink")],1)])]),e._m(10),r("p",[e._v("nvm 是 Mac 下的 node 管理工具, 简单来说就是在你安装了很多 node 版本时，方便你在不同 node 版本之间切换使用。如果需要管理 Windows 下的 node，官方推荐使用 "),r("a",{attrs:{href:"https://github.com/hakobera/nvmw",target:"_blank",rel:"noopener noreferrer"}},[e._v("nvmw"),r("OutboundLink")],1),e._v(" 或 "),r("a",{attrs:{href:"https://github.com/coreybutler/nvm-windows",target:"_blank",rel:"noopener noreferrer"}},[e._v("nvm-windows"),r("OutboundLink")],1),e._v("。")]),e._m(11),e._m(12),e._m(13),e._m(14),r("blockquote",[r("p",[e._v("注：windows 直接下载 "),r("a",{attrs:{href:"https://github.com/coreybutler/nvm-windows/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("nvm-windows"),r("OutboundLink")],1),e._v("窗口式安装即可。")])]),e._m(15),r("p",[e._v("nrm 是一个 npm 源管理器，允许你快速地切换 npm 源。")]),e._m(16),r("ul",[r("li",[r("a",{attrs:{href:"https://www.npmjs.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("npm"),r("OutboundLink")],1)]),r("li",[r("a",{attrs:{href:"https://cnpmjs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("cnpm"),r("OutboundLink")],1)]),r("li",[r("a",{attrs:{href:"http://npm.taobao.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("taobao"),r("OutboundLink")],1)])]),e._m(17),e._m(18),e._m(19),e._m(20),e._m(21),e._m(22),r("p",[r("a",{attrs:{href:"https://brew.sh/index_zh-cn",target:"_blank",rel:"noopener noreferrer"}},[e._v("Homebrew"),r("OutboundLink")],1),e._v(" 是 macOS "),r("a",{attrs:{href:"https://formulae.brew.sh/formula/",target:"_blank",rel:"noopener noreferrer"}},[e._v("缺失的"),r("OutboundLink")],1),e._v("软件包的管理器, 可以让你安装和更新程序变得更方便，目前是 OS X 系统最受欢迎的包管理工具。")]),e._m(23),e._m(24),e._m(25),e._m(26),e._m(27),e._m(28)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"tools"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tools","aria-hidden":"true"}},[this._v("#")]),this._v(" Tools")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node","aria-hidden":"true"}},[this._v("#")]),this._v(" node")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装")])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("注：由于 node 是比较普遍的工具，具体安装步骤就不展开描述了，参见具体安装步骤即可；另 npm 已经在 Node.js 安装的时候顺带装好了。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"yarn"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yarn","aria-hidden":"true"}},[this._v("#")]),this._v(" yarn")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"安装-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装")])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("仅以 macOS 为例，Windows 参考标注。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("  # mac 下安装 利用 Homebrew 包管理工具 具体安装可参见下文\n  MacBook-Pro:~ mr.lemon$: brew install yarn\n\n  # 由于 Homebrew 会自动为你安装，若不需要安装node，使用以下命令\n  MacBook-Pro:~ mr.lemon$: brew install yarn --without-node\n\n  # 查看版本\n  MacBook-Pro:~ mr.lemon$: yarn --version\n  1.12.3\n\n  # 至此已经安装完成\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"相关命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关命令","aria-hidden":"true"}},[this._v("#")]),this._v(" \b 相关命令")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("\n$ yarn                             安装项目的全部依赖\n$ yarn init                        初始化一个新项目类似 npm init\n$ yarn add [package]               添加依赖包\n$ yarn add [package]@[version]     添加指定版本依赖包\n$ yarn upgrade [package]           升级依赖包\n$ yarn upgrade [package]@[version] 升级指定版本依赖包\n$ yarn remove [package]            移除依赖包\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"nvm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nvm","aria-hidden":"true"}},[this._v("#")]),this._v(" nvm")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"安装-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-3","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-{r, engine='bash', code_block_name} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('\n# 连接资源 (curl命令是一个利用URL规则在命令行下工作的文件传输工具)\nMacBook-Pro:~ mr.lemon$: curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.30.2/install.sh | bash\n\n# 配置环境变量 具体参加上文 配置内容\n# This loads nvm\nexport NVM_DIR="/Users/mr.lemon/.nvm"\n[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"\n\n# 查看版本\nMacBook-Pro:~ mr.lemon$: nvm --version\n0.25.2\n\n# \b至此安装完毕\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"相关命令-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关命令-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 相关命令")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("\n$ nvm ls                查看本地安装的node版本列表\n$ nvm use xxx           使用指定版本的node \n$ nvm ls-remote         查看所有的node可用版本\n$ nvm install xxx       下载你想要的版本\n$ nvm alias default xxx 每次启动终端都使用该版本的node \n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"nrm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nrm","aria-hidden":"true"}},[this._v("#")]),this._v(" nrm")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"常见源："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见源：","aria-hidden":"true"}},[this._v("#")]),this._v(" 常见源：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"安装："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装：","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-{r, engine='bash', code_block_name} extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("\n# 全局安装\nMacBook-Pro:~ mr.lemon$: npm install -g nrm\n\n# 查看版本\nMacBook-Pro:~ mr.lemon$: nrm --version\n1.0.2\n\n# 查看源列表\nMacBook-Pro:~ mr.lemon$: nrm ls\n* npm ---- https://registry.npmjs.org/\n  cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"相关命令："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关命令：","aria-hidden":"true"}},[this._v("#")]),this._v(" \b 相关命令：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("\n  $ nrm ls                           查看源列表\n  $ nrm use taobao                   使用指定源\n  $ nrm add  <registry> <url> [home] 添加源\n  $ nrm del <registry>               删除源\n  $ nrm test npm                     测试npm源速度\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("注: 以上工具是日常开发中比较常用工具，不是必须要安装的，但是还是建议安装。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"homebrew"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#homebrew","aria-hidden":"true"}},[this._v("#")]),this._v(" Homebrew")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"安装-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-4","aria-hidden":"true"}},[this._v("#")]),this._v(" 安装")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("  # 连接资源 并 安装\n  # Homebrew安装的程序存放目录：'/usr/local/Cellar'\n  MacBook-Pro:~ mr.lemon$: /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n  # 查看版本\n  MacBook-Pro:~ mr.lemon$: brew --version\n  Homebrew 1.8.4\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"相关命令-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关命令-3","aria-hidden":"true"}},[this._v("#")]),this._v(" 相关命令")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("\n$ brew search [package]      搜索包\n$ brew install [package]     安装包\n$ brew uninstall [package]   卸载包\n$ brew info [package]        查看包信息\n$ brew list \b                 查看本地安装包列表\n$ brew upgrade [package]     更新包\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"mac-下新建用户级环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mac-下新建用户级环境变量","aria-hidden":"true"}},[this._v("#")]),this._v(" MAC 下新建用户级环境变量")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("  用touch 命令创建一个文件，并用open 命令打开文件：\n\n  # 新建文件\n  $: touch ~/.bash_profile\n\n  # 打开文件\n  $: open -t ~/.bash_profile\n\n  # 更新资源\n  $: source  ~/.bash_profile\n  $: echo $PATH\n\n  1./etc/profile  ( 全局（公有）配置，登录时读取该文件 )\n\n  2./etc/bashrc （ 一般在这个文件中添加系统级环境变量 )\n\n  3.~/.bash_profile （ 一般在这个文件中添加用户级环境变量 ）\n\n  默认：\n\n  PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\n  export PATH\n\n")])])])}],!1,null,null,null);t.default=a.exports}}]);