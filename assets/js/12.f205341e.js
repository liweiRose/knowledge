(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{274:function(t,a,s){"use strict";s.r(a);var e=s(0),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"flex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[t._v("#")]),t._v(" Flex")]),t._v(" "),s("p",[t._v("布局的传统解决方案，基于盒状模型，依赖 "),s("code",[t._v("display")]),t._v(" 属性 + "),s("code",[t._v("position")]),t._v("属性 + "),s("code",[t._v("float")]),t._v("属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。")]),t._v(" "),s("p",[t._v("2009年，W3C 提出了一种新的方案----Flex 布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。")]),t._v(" "),s("h2",{attrs:{id:"flex-布局是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-布局是什么？"}},[t._v("#")]),t._v(" Flex 布局是什么？")]),t._v(" "),s("p",[t._v('Flex 是 Flexible Box 的缩写，意为"弹性布局"，用来为盒状模型提供最大的灵活性。')]),t._v(" "),s("p",[t._v("任何一个容器都可以指定为 Flex 布局。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("box"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  display"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("行内元素也可以使用 Flex 布局。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("box"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  display"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("flex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Webkit 内核的浏览器，必须加上"),s("code",[t._v("-webkit")]),t._v("前缀。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("box"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  display"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("webkit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("flex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Safari */")]),t._v("\n  display"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注意，设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。")])]),t._v(" "),s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("p",[t._v('采用 Flex 布局的元素，称为 Flex 容器（flex container），简称"容器"。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称"项目"。\n'),s("img",{attrs:{src:t.$withBase("/images/flex1.png")}})]),t._v(" "),s("p",[t._v("容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做"),s("code",[t._v("main start")]),t._v("，结束位置叫做"),s("code",[t._v("main end")]),t._v("；交叉轴的开始位置叫做"),s("code",[t._v("cross start")]),t._v("，结束位置叫做"),s("code",[t._v("cross end")]),t._v("。")]),t._v(" "),s("p",[t._v("项目默认沿主轴排列。单个项目占据的主轴空间叫做"),s("code",[t._v("main size")]),t._v("，占据的交叉轴空间叫做"),s("code",[t._v("cross size")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"容器的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器的属性"}},[t._v("#")]),t._v(" 容器的属性")]),t._v(" "),s("p",[t._v("以下6个属性设置在容器上。")]),t._v(" "),s("ul",[s("li",[t._v("flex-direction")]),t._v(" "),s("li",[t._v("flex-wrap")]),t._v(" "),s("li",[t._v("flex-flow")]),t._v(" "),s("li",[t._v("justify-content")]),t._v(" "),s("li",[t._v("align-items")]),t._v(" "),s("li",[t._v("align-content")])]),t._v(" "),s("h3",{attrs:{id:"flex-direction属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction属性"}},[t._v("#")]),t._v(" flex-direction属性")]),t._v(" "),s("p",[s("code",[t._v("flex-direction")]),t._v("属性决定主轴的方向（即项目的排列方向）。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("box "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("direction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" column "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" column"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("reverse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" row "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" row"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("reverse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("img",{attrs:{src:t.$withBase("/images/flex2.png")}}),t._v(" "),s("p",[t._v("它可能有4个值。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("column：主轴为垂直方向，起点在上沿。\ncolumn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("reverse：主轴为垂直方向，起点在下沿。\nrow（默认值）：主轴为水平方向，起点在左端。\nrow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("reverse：主轴为水平方向，起点在右端。\n")])])]),s("h3",{attrs:{id:"flex-wrap属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap属性"}},[t._v("#")]),t._v(" flex-wrap属性")]),t._v(" "),s("p",[t._v('默认情况下，项目都排在一条线（又称"轴线"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行')]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("box"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wrap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" wrap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" wrap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("reverse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("它可能取三个值。")]),t._v(" "),s("p",[t._v("（1）"),s("code",[t._v("nowrap")]),t._v("（默认）：不换行。\n"),s("img",{attrs:{src:t.$withBase("/images/flex3.png")}})]),t._v(" "),s("p",[t._v("（2）"),s("code",[t._v("wrap")]),t._v("：换行，第一行在上方。\n"),s("img",{attrs:{src:t.$withBase("/images/flex4.png")}})]),t._v(" "),s("p",[t._v("（3）"),s("code",[t._v("wrap-reverse")]),t._v("：换行，第一行在下方。\n"),s("img",{attrs:{src:t.$withBase("/images/flex5.jpg")}})]),t._v(" "),s("h3",{attrs:{id:"flex-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow"}},[t._v("#")]),t._v(" flex-flow")]),t._v(" "),s("p",[s("code",[t._v("flex-flow")]),t._v("属性是"),s("code",[t._v("flex-direction")]),t._v("属性和"),s("code",[t._v("flex-wrap")]),t._v("属性的简写形式，默认值为"),s("code",[t._v("row nowrap")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("box "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("flow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("direction"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("wrap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"justify-content属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#justify-content属性"}},[t._v("#")]),t._v(" justify-content属性")]),t._v(" "),s("p",[s("code",[t._v("justify-content")]),t._v("属性定义了项目在主轴上的对齐方式。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("box "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  justify"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" center "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" space"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("between "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" space"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("around"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("img",{attrs:{src:t.$withBase("/images/flex5.png")}}),t._v(" "),s("p",[t._v("它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start（默认值）：左对齐\nflex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end：右对齐\ncenter： 居中\nspace"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("between：两端对齐，项目之间的间隔都相等。\nspace"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。\n")])])]),s("h3",{attrs:{id:"align-items属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#align-items属性"}},[t._v("#")]),t._v(" align-items属性")]),t._v(" "),s("p",[s("code",[t._v("align-items")]),t._v("属性定义项目在交叉轴上如何对齐。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("box "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  align"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" center "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" baseline "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" stretch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("img",{attrs:{src:t.$withBase("/images/flex6.png")}}),t._v(" "),s("p",[t._v("它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start：交叉轴的起点对齐。\nflex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end：交叉轴的终点对齐。\ncenter：交叉轴的中点对齐。\nbaseline"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 项目的第一行文字的基线对齐。\nstretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\n")])])]),s("h3",{attrs:{id:"align-content属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#align-content属性"}},[t._v("#")]),t._v(" align-content属性")]),t._v(" "),s("p",[t._v("align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("box "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  align"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" center "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" space"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("between "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" space"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("around "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" stretch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("img",{attrs:{src:t.$withBase("/images/flex7.png")}}),t._v(" "),s("p",[t._v("该属性可能取6个值。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start：与交叉轴的起点对齐。\nflex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end：与交叉轴的终点对齐。\ncenter：与交叉轴的中点对齐。\nspace"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("between：与交叉轴两端对齐，轴线之间的间隔平均分布。\nspace"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。\nstretch（默认值）：轴线占满整个交叉轴。\n")])])]),s("h2",{attrs:{id:"项目的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目的属性"}},[t._v("#")]),t._v(" 项目的属性")]),t._v(" "),s("p",[t._v("以下6个属性设置在项目上。")]),t._v(" "),s("ul",[s("li",[t._v("order")]),t._v(" "),s("li",[t._v("flex-grow")]),t._v(" "),s("li",[t._v("flex-shrink")]),t._v(" "),s("li",[t._v("flex-basis")]),t._v(" "),s("li",[t._v("flex")]),t._v(" "),s("li",[t._v("align-self")])]),t._v(" "),s("h3",{attrs:{id:"order属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#order属性"}},[t._v("#")]),t._v(" order属性")]),t._v(" "),s("p",[s("code",[t._v("order")]),t._v("属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("integer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("img",{attrs:{src:t.$withBase("/images/flex8.png")}}),t._v(" "),s("h3",{attrs:{id:"flex-grow属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow属性"}},[t._v("#")]),t._v(" flex-grow属性")]),t._v(" "),s("p",[s("code",[t._v("flex-grow")]),t._v("属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("grow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("number"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default 0 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("img",{attrs:{src:t.$withBase("/images/flex9.png")}}),t._v("\n如果所有项目的`flex-grow`属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的`flex-grow`属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。\n### flex-shrink属性\n`flex-shrink`属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。\n"),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("shrink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("number"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*default 1*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("img",{attrs:{src:t.$withBase("/images/flex10.jpg")}}),t._v("\n如果所有项目的`flex-shrink`属性都为1，当空间不足时，都将等比例缩小。如果一个项目的`flex-shrink`属性为0，其他项目都为1，则空间不足时，前者不缩小。\n"),s("p",[t._v("负值对该属性无效。")]),t._v(" "),s("h3",{attrs:{id:"flex-basis属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis属性"}},[t._v("#")]),t._v(" flex-basis属性")]),t._v(" "),s("p",[s("code",[t._v("flex-basis")]),t._v("属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("basis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default auto */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("它可以设为跟"),s("code",[t._v("width")]),t._v("或"),s("code",[t._v("height")]),t._v("属性一样的值（比如350px），则项目将占据固定空间。")]),t._v(" "),s("h3",{attrs:{id:"flex属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex属性"}},[t._v("#")]),t._v(" flex属性")]),t._v(" "),s("p",[s("code",[t._v("flex")]),t._v("属性是"),s("code",[t._v("flex-grow")]),t._v(", "),s("code",[t._v("flex-shrink")]),t._v(" 和 "),s("code",[t._v("flex-basis")]),t._v("的简写，默认值为"),s("code",[t._v("0 1 auto")]),t._v("。后两个属性可选。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  flex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-grow'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-shrink'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-basis'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("该属性有两个快捷值："),s("code",[t._v("auto (1 1 auto)")]),t._v(" 和 "),s("code",[t._v("none (0 0 auto)")]),t._v("。")]),t._v(" "),s("p",[t._v("建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。")]),t._v(" "),s("h3",{attrs:{id:"align-self属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#align-self属性"}},[t._v("#")]),t._v(" align-self属性")]),t._v(" "),s("p",[s("code",[t._v("align-self")]),t._v("属性允许单个项目有与其他项目不一样的对齐方式，可覆盖"),s("code",[t._v("align-items")]),t._v("属性。默认值为"),s("code",[t._v("auto")]),t._v("，表示继承父元素的"),s("code",[t._v("align-items")]),t._v("属性，如果没有父元素，则等同于"),s("code",[t._v("stretch")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("item "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  align"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" flex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" center "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" baseline "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" stretch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("img",{attrs:{src:t.$withBase("/images/flex11.png")}}),t._v("\n该属性可能取6个值，除了auto，其他都与align-items属性完全一致。\n")])}),[],!1,null,null,null);a.default=r.exports}}]);